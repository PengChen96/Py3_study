Python3

C:\Users\Administrator\Desktop\PyCharm\Py3_study>python hello.py
hello

2017/1/14
    1.编码
        Python3 默认UTF-8;
    2.标识符
        2.1 第一个字符必须是字母表中字母或下划线“_”；
        2.2 标识符的其他部分由字母，数字，下划线组成；
        2.3 标识符对大小写敏感；
        注：在Python 3中，非-ASCII 标识符也是允许的了；
    3.保留字
        >>> import keyword
        >>> keyword.kwlist
        ['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def',
        'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import',
        'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']
    4.注释
        单行注释    #单行注释
        多行注释    """多行注释""" 或 '''多行注释'''
    5.行与缩进
        Python是使用缩进来表示代码块的，不需要使用大括号({})；
        缩进的空格输是可变的，但是同一个代码块的语句必须包含相同的缩进空格输；
    6.多行语句
        Python可以使用反斜杠(\)来实现多行语句；
        例：
        total = one + \
                two + \
                three
        在 [], {}, 或 () 中的多行语句，不需要使用反斜杠(\)；
        例：
        total = ['one',
                'two',
                'three']
    7.数据类型
        Python有4种数据类型
            整数：如1；
            长整数：比较大的整数；
            浮点数：如1.11，3E-2；
            复数：如 1 + 2j、 1.1 + 2.2j；
    8.字符串
        Python中单引号和双引号用法完全相同
        使用三引号( ''' 或 """ )可以指定一个多行字符串
        转义符 '\'
        自然字符串， 通过在字符串前加r或R。 如 r"this is a line with \n" 则\n会显示，并不是换行
        python允许处理unicode字符串，加前缀u或U， 如 u"this is an unicode string"
        字符串是不可变的
        按字面意义级联字符串，如"this " "is " "string"会被自动转换为this is string
    9.空行
        函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始
        注：空行与代码缩进不同，空行并不是Python语法的一部分
            空行也是程序代码的部分
    10.等待用户输入
        执行下面的程序在按回车键后就会等待用户输入
        input("\n\n按下 enter 键后退出。")
    11.同一行显示多条语句
        Python可以在同一行中使用多条语句，语句之间使用分号(;)分割
        import sys; x = 'runoob'; sys.stdout.write(x + '\n')
    12.多个语句构成代码组
        缩进相同的一组语句构成一个代码块，我们称之代码组
        像if、while、def和class这样的复合语句，首行以关键字开始，以冒号( : )结束，该行之后的一行或多行代码构成代码组
        我们将首行及后面的代码组称为一个子句(clause)
        if expression :
           suite
        elif expression :
           suite
        else :
           suite

2017/1/16
    基本数据类型

    1.
    Python中变量不需要声明，每个变量在使用前必须赋值，变量赋值后该变量才会被创建；
    Python中变量就是变量，它没有类型，我们所说的“类型”是变量所指的内存中对象的类型；
    Python允许同时多个变量赋值；
        例：a = b = c = 1;
        (创建一个整型对象，值为1，三个变量被分配到相同的内存空间上)
    也可以为多个对象指定多个变量；
        例：a,b,c = 1,2,"hello"

    2.Python中六个标准数据类型
        Number(数字)
        String(字符串)    exa = "abcdef"
        List(列表)        exa = ['a','b',1,1.1]
        Tuple(元组)       exa = ('a',2.2)
        Sets(集合)        exa = {'a','b'}
        Dictionary(字典)

    Number(数字)
        Python3支持int,float,bool,complex(复数)
        (Python3中只有一种整数类型int,表示为长整型，没有Python2中的Long)
        内置的type()函数可以用来查询变量所指的对象类型；
        例：
        >>> a,b,c,d = 10,1.1,True,4+3j;
        >>> print(type(a),type(b),type(c),type(d));
        <class 'int'> <class 'float'> <class 'bool'> <class 'complex'>
        注：
        Python2中没有布尔型，它用数字0表示False,用1表示True;
        Python3中把True和False定义成关键字了，但它们的值还是1和0，可以和数字相加；

        当你指定一个值时，Number对象就会被创建；
        例：var1 = 1;
        可以用del语句删除一些对象引用；
        例：
        >>> a,b,c,d = 10,1.1,True,4+3j;
        >>> print(a);
        >>> del a;
        >>> print(a);   //NameError: name 'a' is not defined

        数值运算
            >>> 2/4   //除法，得到一个浮点数
            0.5
            >>> 2//4  //除法，得到一个整数
            0
            >>>2**5   //乘方 
            32
            注：混合计算时，Python会把整型转换成为浮点数；

        Python还支持复数，复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型
        例：
        >>> a,b = 1j,4+3j;
        >>> print(a+b);     //(4+4j)

    String(字符串)
        Python中的字符串用单引号(')或双引号(")括起来，同时使用反斜杠(\)转义特殊字符。
        
        字符串截取语法格式：
        变量[头下标：尾下标]

        索引值以 0 为开始值，-1 为从末尾的开始位置；
        加号 (+) 是字符串的连接符；
        星号 (*) 表示复制当前字符串，紧跟的数字为复制的次数；
        例：
        str = 'ABCDEFG'
        print (str)          # 输出字符串 ABCDEFG
        print (str[0:-1])    # 输出第一个个到倒数第二个的所有字符 ABCDEF
        print (str[0])       # 输出字符串第一个字符   A
        print (str[2:5])     # 输出从第三个开始到第五个的字符  CDE
        print (str[2:])      # 输出从第三个开始的后的所有字符  CDEFG
        print (str * 2)      # 输出字符串两次  ABCDEFGABCDEFG
        print (str + "hello") # 连接字符串   ABCDEFhello

        Python中的字符串有两种索引方式，从左往右以0开始，从右往左以-1开始
        例:
        >>> word = 'Python'
        >>> print(word[0], word[5])
        P n
        >>> print(word[-1], word[-6])
        n P

        Python 使用反斜杠(\)转义特殊字符，如果你不想让反斜杠发生转义，可以在字符串前面添加一个 r，表示原始字符串;
        例：
        print("ABC\nDEF");  //ABC
                              DEF
        print(r"ABC\nDEF"); //ABC\nDEF

        注：Python中的字符串不能改变；

    List(列表)
        列表是写在方括号([])之间，用逗号分隔开的元素列表；
        列表和字符串一样可以被索引和截取，截取后返回一个新列表；
        例：
        list = [ 'ABC', 123 , 1.1, 'def', 2.2 ]
        tinylist = [456, 'def']
        print (list)            # 输出完整列表 
                                //['ABC', 123, 1.1, 'def', 2.2]
        print (list[0])         # 输出列表第一个元素
                                //ABC
        print (list[1:3])       # 从第二个开始输出到第三个元素
                                //[123, 1.1]
        print (list[2:])        # 输出从第三个元素开始的所有元素
                                //[1.1, 'def', 2.2]
        print (tinylist * 2)    # 输出两次列表
                                //[456, 'def', 456, 'def']
        print (list + tinylist) # 连接列表
                            //['ABC', 123, 1.1, 'def', 2.2, 456, 'def']

        注：列表中的元素是可以改变的；

    Tuple(元组)
        元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号(())里，元素之间用逗号隔开。

        元组与字符串类似，可以被索引且下标索引从0开始，-1 为从末尾开始的位置。也可以进行截取；
        可以把字符串看作一种特殊的元组；

        注：string、list和tuple都属于sequence（序列）；

    Set(集合)
        集合（set）是一个无序不重复元素的序列；
        基本功能是进行成员关系测试和删除重复元素；

        可以使用大括号({})或者 set()函数创建集合；
        注：
        创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。、

        例：
        set = {'a','a','b','c'}
        print(set)          //{'b', 'c', 'a'}
        #成员测试
        if('c' in set) :
            print('c 在集合中')
        else :
            print('c 不在集合中')

        集合运算：
            a = {'a','b','c'}
            b = {'a','b','d'}
            print(a-b)      # a和b的差集 {'c'}
            print(a|b)      # a和b的并集 {'b', 'd', 'a', 'c'}
            print(a&b)      # a和b的交集 {'b', 'a'}
            print(a^b)      # a和b中不同时存在的元素 {'c', 'd'}

    Dictionary(字典)
        字典是一种映射类型，是一个无序的键(key) : 值(value)对集合；
        列表是有序的对象集合
        例：
        dict = {'a': 'a','b':1.1, 'c': 'c'}
        print(dict['a'])        //a
        print(dict.keys())      //dict_keys(['a', 'b', 'c'])
        print(dict.values())    //dict_values(['a', 1.1, 'c'])

    3.Python数据类型转换
        int(x [,base])
        将x转换为一个整数
        
        float(x)
        将x转换到一个浮点数
        
        complex(real [,imag])
        创建一个复数
        
        str(x)
        将对象 x 转换为字符串
        
        repr(x)
        将对象 x 转换为表达式字符串
        
        eval(str)
        用来计算在字符串中的有效Python表达式,并返回一个对象
        
        tuple(s)
        将序列 s 转换为一个元组
        
        list(s)
        将序列 s 转换为一个列表
        
        set(s)
        转换为可变集合
        
        dict(d)
        创建一个字典。d 必须是一个序列 (key,value)元组。
        
        frozenset(s)
        转换为不可变集合
        
        chr(x)
        将一个整数转换为一个字符
        
        unichr(x)
        将一个整数转换为Unicode字符
        
        ord(x)
        将一个字符转换为它的整数值
        
        hex(x)
        将一个整数转换为一个十六进制字符串
        
        oct(x)
        将一个整数转换为一个八进制字符串